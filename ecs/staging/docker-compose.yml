version: '3'

volumes:
  assets:

services:
  app: &app
    build:
      context: ../..
      dockerfile: docker/app.staging.Dockerfile
      args:
        RUBY_VERSION: '2.6.5'
        BUNDLER_VERSION: '2.0.2'
        PG_MAJOR: '11'
        NODE_MAJOR: '10'
        YARN_VERSION: '1.19.2-1'
    image: 387465342537.dkr.ecr.us-east-2.amazonaws.com/bookstore/app:${TAG}
    environment:
      RAILS_ENV: staging
      REDIS_URL: redis://in_memory_store:6379
      PG_HOST: db
      PG_USERNAME: postgres
      PG_PORT: 5432
      RAILS_LOG_TO_STDOUT: "true"
      BUNDLE_WITHOUT: development:test
      BUNDLE_DEPLOYMENT: "true"
    links:
      - db
      - in_memory_store
    entrypoint: ./docker/app.entrypoint.sh
    command: bundle exec puma -C config/puma.rb
    volumes:
      - assets:/var/www/bookstore/public/assets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  sidekiq:
    <<: *app
    entrypoint: ''
    command: bundle exec sidekiq -C config/sidekiq.yml
    healthcheck:
      test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]

  web:
    build:
      context: ../..
      dockerfile: docker/nginx.Dockerfile
    image: 387465342537.dkr.ecr.us-east-2.amazonaws.com/bookstore/web:${TAG}
    volumes:
      - assets:/var/www/bookstore/public/assets:ro
    ports:
      - 80
    links:
      - app
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]

  db:
    image: postgres:11
    # environment:
    #   POSTGRES_USERNAME: postgres
    #   POSTGRES_PASSWORD: 0123456789
    #   POSTGRES_DB: bookstore_staging
    volumes:
      - /postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  in_memory_store:
    image: redis:4.0
    ports:
      - 6379
    volumes:
      - /redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  dba:
    <<: *app
    environment:
      PG_HOST: db
      PG_USERNAME: postgres
      PGPASSWORD: postgres
      POSTGRES_DATABASE: bookstore_staging
      SCHEDULE: "*/2 * * * *"
      S3_BUCKET: pg-backup-test-blorchid 
      S3_FOLDER: pg
      S3_REGION: us-east-2
      METADATA_ENDPOINT_IP: 169.254.170.2
    user: root
    entrypoint: ''
    command: ./docker/backup_job.sh
    healthcheck:
      disable: true
