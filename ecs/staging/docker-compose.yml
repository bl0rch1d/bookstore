version: '3'

volumes:
  assets:

services:
  app: &app
    build:
      context: ../..
      dockerfile: docker/app.staging.Dockerfile
      args:
        RUBY_VERSION: '2.6.5'
        BUNDLER_VERSION: '2.0.2'
        PG_MAJOR: '11'
        NODE_MAJOR: '10'
        YARN_VERSION: '1.19.2-1'
    image: 385571455969.dkr.ecr.eu-central-1.amazonaws.com/bookstore/app:${TAG}
    env_file: docker.env
    links:
      - db
      - in_memory_store
    entrypoint: ./docker/app.entrypoint.sh
    command: bundle exec puma -C config/puma.rb
    volumes:
      - assets:/var/www/bookstore/public/assets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/admin"]
      timeout: 20s
      retries: 3
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: puma

  sidekiq:
    <<: *app
    entrypoint: ''
    command: bundle exec sidekiq -C config/sidekiq.yml
    healthcheck:
      test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: sidekiq

  web:
    build:
      context: ../..
      dockerfile: docker/nginx.Dockerfile
    image: 385571455969.dkr.ecr.eu-central-1.amazonaws.com/bookstore/app:${TAG}
    volumes:
      - assets:/var/www/bookstore/public/assets:ro
    ports:
      - 80
    links:
      - app
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: web

  db:
    image: postgres:11
    volumes:
      - /postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: db

  in_memory_store:
    image: redis:4.0
    ports:
      - 6379
    volumes:
      - /redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: db

  dba:
    <<: *app
    user: root
    entrypoint: ''
    command: ./docker/backup_job.sh
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/cron status"]
    logging:
      driver: awslogs
      options:
        awslogs-group: bookstore-staging
        awslogs-region: eu-central-1
        awslogs-stream-prefix: dba

